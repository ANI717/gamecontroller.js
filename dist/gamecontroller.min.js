!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);const i=(t,e="log")=>{const n=console;"error"===e?n&&"function"==typeof n.error&&n.error(t):n&&"function"==typeof n.info&&n.info(t)},o=t=>i(t,"error"),s=()=>navigator.getGamepads&&"function"==typeof navigator.getGamepads||navigator.getGamepads&&"function"==typeof navigator.webkitGetGamepads,a="Gamepad disconnected",c="Gamepad detected.",r="Axe does not exist or is not valid.",d="Button does not exist or is not valid.",u="Unknown event name",h="Invalid property.",f="Invalid threshold. The value must be a number between 0.00 and 1.00.",l="Your web browser does not support the Gamepad API.";var p={init:function(t){let e={id:t.index,buttons:t.buttons.length,axes:Math.floor(t.axes.length/2),axeValues:[],threshold:[1],mapping:t.mapping,buttonActions:{},axesActions:{},set:function(t,e){if(["threshold"].indexOf(t)>=0){if("threshold"===t&&(!parseFloat(e)||e<0||e>1))return void o(f);this[t]=e}else o(h)},checkStatus:function(){let t={};const e=navigator,n=e.getGamepads?e.getGamepads():e.webkitGetGamepads?e.webkitGetGamepads:[];if(n.length){if((t=n[this.id]).buttons)for(let e=0;e<this.buttons;e++)!0===t.buttons[e].pressed&&this.buttonActions[e].action();if(t.axes)for(let e=0;e<t.axes.length;e++){const n=t.axes[e].toFixed(4),i=Math.floor(e/2);this.axeValues[i][e%2]=n,n>=this.threshold[0]&&e%2==0?this.axesActions[i].right.action():n<=-this.threshold[0]&&e%2==0?this.axesActions[i].left.action():n>=this.threshold[0]&&e%2==1?this.axesActions[i].down.action():n<=-this.threshold[0]&&e%2==1&&this.axesActions[i].up.action()}}},on:function(t,e){if(t.match(/^button\d+$/)){const n=parseInt(t.match(/^button(\d+)$/)[1]);n>=0&&n<this.buttons?this.buttonActions[n].action=e:o(d)}else if("start"===t)this.buttonActions[9].action=e;else if("select"===t)this.buttonActions[8].action=e;else if("r1"===t)this.buttonActions[5].action=e;else if("r2"===t)this.buttonActions[7].action=e;else if("l1"===t)this.buttonActions[4].action=e;else if("l2"===t)this.buttonActions[6].action=e;else if("power"===t)this.buttons>=17?this.buttonActions[16].action=e:o(d);else if(t.match(/^(up|down|left|right)(\d+)?$/)){const n=t.match(/^(up|down|left|right)(\d+)?$/),i=n[1],s=parseInt(n[2])||0;s>=0&&s<this.axes?this.axesActions[s][i].action=e:o(r)}return this},off:function(t){if(t.match(/^button\d+$/)){const e=parseInt(t.match(/^button(\d+)$/)[1]);e>=0&&e<this.buttons?this.buttonActions[e].action=function(){}:o(d)}else if("start"===t)this.buttonActions[9].action=function(){};else if("select"===t)this.buttonActions[8].action=function(){};else if("r1"===t)this.buttonActions[5].action=function(){};else if("r2"===t)this.buttonActions[7].action=function(){};else if("l1"===t)this.buttonActions[4].action=function(){};else if("l2"===t)this.buttonActions[6].action=function(){};else if("power"===t)this.buttons>=17?this.buttonActions[16].action=function(){}:o(d);else if(t.match(/^(up|down|left|right)(\d+)?$/)){const e=t.match(/^(up|down|left|right)(\d+)?$/),n=e[1],i=parseInt(e[2])||0;i>=0&&i<this.axes?this.axesActions[i][n].action=function(){}:o(r)}return this}};for(let t=0;t<e.buttons;t++)e.buttonActions[t]={action:function(){}};for(let t=0;t<e.axes;t++)e.axesActions[t]={down:{action:function(){}},left:{action:function(){}},right:{action:function(){}},up:{action:function(){}}},e.axeValues[t]=[0,0];return e}};const m={gamepads:{},threshold:[1],isReady:s(),events:["connect","disconnect","beforecycle","aftercycle"],connect:function(){},disconnect:function(){},beforecycle:function(){},aftercycle:function(){},getGamepads:function(){return this.gamepads},getGamepad:function(t){return this.gamepads[t]?this.gamepads[t]:null},set:function(t,e){if(["threshold"].indexOf(t)>=0){if("threshold"===t&&(!parseFloat(e)||e<0||e>1))return void o(f);if(this[t]=e,"threshold"===t){const t=this.getGamepads(),e=Object.keys(t);for(let n=0;n<e.length;n++)t[e[n]].set("threshold",this.threshold)}}else o(h)},checkStatus:function(){const t=window.requestAnimationFrame||window.webkitRequestAnimationFrame,e=Object.keys(m.gamepads);m.beforecycle();for(let t=0;t<e.length;t++)m.gamepads[e[t]].checkStatus();m.aftercycle(),e.length>0&&t(m.checkStatus)},init:function(){window.addEventListener("gamepadconnected",t=>{if(i(c),window.gamepads||(window.gamepads={}),!window.gamepads[t.gamepad.index]){window.gamepads[t.gamepad.index]=t.gamepad;const e=p.init(t.gamepad);e.set("threshold",this.threshold),this.gamepads[e.id]=e,this.connect(this.gamepads[e.id])}1===Object.keys(this.gamepads).length&&this.checkStatus()}),window.addEventListener("gamepaddisconnected",t=>{i(a),delete window.gamepads[t.gamepad.index],delete this.gamepads[t.gamepad.index],this.disconnect(t.gamepad.index)})},on:function(t,e){return this.events.indexOf(t)>=0?this[t]=e:o(u),this},off:function(t){return this.events.indexOf(t)>=0?this[t]=function(){}:o(u),this}};m.init();var b=m;s()?window.gameControl=b:o(l)}]);